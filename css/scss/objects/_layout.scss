/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/

/* Layout Container */
.lc {
	max-width: $max-width;
	margin: 0 auto;
	padding: $pad-half;
}

/**
        === container ===
**/

.main-container {
    background-color: $color-body;
}
// row
.ctp-row, .content-row {
    @include content-row;
}

// container , wrapper, iiner-wrapper
.ctp-container, .wrapper {
    @include container-fixed;

    @media all and (min-width: $bp-med-2) {
        width: 95%;
    }
    @media all and (min-width: $bp-xxxl) {
        width: 90em;
    }
    &.inner-wrapper {
        width: 100%;
    }
}

// col
.ctp-col {
    @include content-col;
    position: relative;
    width: 100%;

    @media all and (min-width: $bp-med-2) {
        width: 50%;
    }
}


// width-full
.width-full {
    width: 100%;
}
.width-half {
    width: 50%;
}
// block sm 10
.block-sm-10 {
    width: 100%;
    padding : 1em;
    @media all and (min-width: $bp-med-2) {
        width: 64%;
        padding : 0;
    }
}
// block sm 2
.block-sm-2 {
    width: 100%;
    padding : 1em;
    @media all and (min-width: $bp-med-2) {
        width: 18%;
        padding : 0;
    }
}

// Absolute grid system
//
// Rows and Cols

@for $i from 1 through $grid-columns {
    /*******************/
    /* #{$i} column(s) */
    /*******************/
    $widthParent: percentage($i / $grid-columns);
    .col-#{$i} {
        width: 100%;
        @include breakpoint($bp-med-2) {
            width: $widthParent;
        }
        @for $j from 1 through $i {
            $widthChild: percentage($j / $i);
            & > .col-#{$j}, & > div > .col-#{$j} {
                width: 100%;
                @include breakpoint($bp-med-2) {
                    width: $widthChild;
                }
            }
        }
    }
}

$breakpoints: $bp-small-2, $bp-med-2, $bp-large-2, $bp-xl, $bp-xxxl;
@for $i from 1 through $grid-columns {
    /****************/
    /* #{$i} row(s) */
    /****************/
    @for $j from 1 through length($breakpoints) {
        $breakpoint: nth($breakpoints, $j);
        .row-#{$i} > div, .row-#{$i} > div > iframe {
            @include breakpoint($breakpoint) {
                $minHeight: $grid-row-height * ($breakpoint / $bp-xl) * $i;
                min-height: #{$minHeight - $grid-gutter-width * 2}em;
            }
        }
    }
}
